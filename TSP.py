import math
import random
import time
import copy

GOOD_NUM = 5 # 좋은 유전자 개수 (전역변수)

def calculate(x1, y1, x2, y2):
    return math.sqrt(((x2-x1)**2) + ((y2-y1)**2))

def length(li):
    result = 0
    for i in range(0,99):
        result += W[int(li[i])*100 + int(li[i+1])]
    result+=W[int(li[99])*100 + int(li[0])]
    return result

# 데이터 좌표
array = [
    [0, 0],
    [372, 519],
    [918, 673],
    [577, 721],
    [451, 3],
    [939, 924],
    [729, 220],
    [118, 622],
    [884, 367],
    [406, 704],
    [149, 900],
    [119, 569],
    [879, 784],
    [254, 306],
    [380, 351],
    [391, 7],
    [166, 252],
    [499, 459],
    [978, 535],
    [476, 140],
    [478, 424],
    [436, 217],
    [795, 648],
    [514, 435],
    [153, 988],
    [111, 708],
    [514, 140],
    [911, 622],
    [314, 790],
    [776, 545],
    [385, 888],
    [486, 802],
    [938, 723],
    [146, 70],
    [525, 195],
    [572, 480],
    [735, 373],
    [758, 779],
    [664, 378],
    [49, 953],
    [214, 171],
    [395, 821],
    [183, 105],
    [36, 30],
    [660, 850],
    [726, 364],
    [924, 523],
    [970, 674],
    [608, 152],
    [482, 962],
    [92, 292],
    [408, 369],
    [752, 748],
    [282, 566],
    [991, 878],
    [162, 564],
    [576, 823],
    [298, 906],
    [935, 499],
    [810, 523],
    [225, 181],
    [444, 90],
    [480, 348],
    [688, 635],
    [26, 983],
    [387, 949],
    [436, 393],
    [984, 213],
    [514, 859],
    [481, 78],
    [503, 32],
    [674, 928],
    [964, 514],
    [205, 511],
    [587, 935],
    [201, 542],
    [132, 382],
    [177, 1],
    [578, 347],
    [54, 862],
    [950, 485],
    [4, 455],
    [594, 852],
    [835, 104],
    [905, 724],
    [612, 197],
    [974, 251],
    [586, 868],
    [755, 828],
    [724, 331],
    [612, 442],
    [457, 788],
    [549, 534],
    [331, 769],
    [939, 828],
    [943, 557],
    [291, 151],
    [468, 606],
    [629, 722],
    [823, 487],
]

W = [] #점과 점 사이 거리 배열
Best_GOOD = [] #제일 좋은 유전자

pre_GOOD = [] #이전 좋은 유전자들
G = 0 # 세대
min = 55000 #임의의 값

# 거리 값 계산 W
for i in range(0,100):
    for j in range(0,100):
        W.append(calculate(array[i][0], array[i][1], array[j][0], array[j][1]))

# test_min = 1000
# test_i = 100

# for i in range(0, 100):
#     if W[6200+i] != 0:
#         if test_min > W[6200+i]:
#             test_min = W[6200+i]
#             test_i = i
# print(test_i)





# while True:
GOOD = [] #좋은 유전자들
if pre_GOOD.__len__() == 3:
    for i in range(3):
        pre_GOOD.pop()
# 초기 유전자 설정
for i in range(0, 30):
    test_arr = list(range(100))
    random.shuffle(test_arr)
    # test_arr.append(test_arr[0])
    # test_arr = [48, 26, 19, 21, 34, 85, 78, 89, 45, 36, 38, 90, 35, 17, 23, 20, 62, 66, 51, 14, 13, 16, 42, 40, 60, 96, 61, 69, 70, 4, 15, 77, 0, 43, 33, 50, 76, 81, 73, 75, 55, 11, 7, 25, 79, 39, 64, 24, 10, 57, 65, 30, 41, 91, 31, 68, 49, 74, 87, 82, 56, 44, 71, 88, 5, 54, 94, 12, 84, 32, 47, 2, 27, 95, 18, 72, 80, 58, 46, 99, 59, 29, 22, 52, 37, 98, 3, 97, 9, 93, 28, 53, 1, 92, 63, 8, 86, 67, 83, 6]
    # test_arr = [48, 26, 19, 21, 34, 85, 78, 89, 45, 36, 38, 90, 35, 17, 23, 20, 62, 66, 51, 14, 13, 16, 60, 40, 42, 96, 61, 69, 70, 4, 15, 77, 33, 43, 0, 50, 76, 81, 73, 75, 55, 11, 7, 25, 79, 39, 64, 24, 10, 57, 65, 30, 41, 91, 31, 68, 49, 74, 87, 82, 56, 44, 71, 88, 5, 54, 94, 12, 84, 32, 47, 2, 27, 95, 18, 72, 80, 58, 46, 22, 52, 37, 98, 3, 97, 9, 93, 28, 53, 1, 92, 63, 29, 59, 99, 8, 86, 67, 83, 6]
    
    # test_arr = [48, 26, 19, 21, 34, 85, 89, 45, 36, 38, 78, 90, 35, 17, 23, 20, 62, 66, 51, 14, 13, 16, 60, 40, 42, 96, 61, 69, 70, 4, 15, 77, 33, 43, 0, 50, 76, 81, 73, 75, 55, 11, 7, 25, 79, 39, 64, 24, 10, 57, 65, 30, 41, 91, 31, 68, 49, 74, 87, 82, 56, 44, 71, 88, 5, 54, 94, 12, 84, 32, 47, 2, 27, 95, 18, 72, 80, 58, 46, 22, 52, 37, 98, 3, 97, 9, 93, 28, 53, 1, 92, 63, 29, 59, 99, 8, 86, 67, 83, 6]
    
    # test_arr = [26, 19, 21, 34, 48, 85, 78, 89, 45, 36, 38, 90, 35, 92, 17, 23, 20, 62, 66, 51, 14, 13, 16, 33, 42, 40, 60, 96, 61, 69, 70, 4, 15, 77, 0, 43, 50, 76, 81, 73, 75, 55, 11, 7, 25, 79, 39, 64, 24, 10, 57, 65, 30, 41, 91, 31, 68, 49, 74, 87, 82, 56, 44, 71, 88, 5, 54, 94, 12, 84, 32, 47, 2, 27, 95, 18, 72, 80, 58, 46, 99, 59, 29, 22, 52, 37, 98, 3, 97, 9, 93, 28, 53, 1, 63, 8, 86, 67, 83, 6]
    # test_arr = [48, 26, 19, 21, 34, 85, 78, 89, 45, 36, 38, 90, 35, 92, 17, 23, 20, 62, 66, 51, 14, 13, 16, 33, 42, 40, 60, 96, 61, 69, 70, 4, 15, 77, 0, 43, 50, 76, 81, 73, 75, 55, 11, 7, 25, 79, 39, 64, 24, 10, 57, 65, 30, 41, 91, 31, 68, 49, 74, 87, 82, 56, 44, 71, 88, 5, 54, 94, 12, 84, 32, 47, 2, 27, 95, 18, 72, 80, 58, 46, 99, 59, 29, 22, 52, 37, 98, 3, 97, 9, 93, 28, 53, 1, 63, 8, 86, 67, 83, 6]
    # test_arr = [48, 26, 19, 21, 34, 85, 78, 89, 45, 36, 38, 90, 35, 17, 23, 20, 62, 66, 51, 14, 13, 16, 33, 42, 40, 60, 96, 61, 69, 70, 4, 15, 77, 0, 43, 50, 76, 81, 73, 75, 55, 11, 7, 25, 79, 39, 64, 24, 10, 57, 65, 30, 41, 91, 31, 68, 49, 74, 87, 82, 56, 44, 71, 88, 5, 54, 94, 12, 84, 32, 47, 2, 27, 95, 18, 72, 80, 58, 46, 99, 59, 29, 22, 52, 37, 98, 3, 97, 9, 93, 28, 53, 1, 92, 63, 8, 86, 67, 83, 6]
    # test_arr = list(range(100))
    leng = length(test_arr)

    if leng < min:
        min = leng
        GOOD.append([leng, test_arr])
        GOOD.sort()
        if GOOD.__len__() == GOOD_NUM+1:
            GOOD.pop()

while pre_GOOD!=GOOD:
    if pre_GOOD.__len__() == 3:
        for i in range(3):
            pre_GOOD.pop()
    pre_GOOD = copy.deepcopy(GOOD)

    #돌연변이 생성
    # print(G)
    # print("세대")
    # G += 1
    Gene = []
    for i in range(GOOD.__len__()):
        for j in range(0, 100):
            for k in range(j+1, 100):
                # 단순 스왑
                change_gene = copy.deepcopy(GOOD[i][1])

                change_gene[j], change_gene[k] = change_gene[k], change_gene[j]

                Gene.append(change_gene)


                change_gene = copy.deepcopy(GOOD[i][1])

                # 랜덤 셔플
                for l in range(3):
                    a = random.randint(0, 99)
                    b = random.randint(0, 99)
                    change_gene[a], change_gene[b] = change_gene[b], change_gene[a]

                Gene.append(change_gene)

                # 끼어넣기
                change_gene = copy.deepcopy(GOOD[i][1])
                change_gene.remove(j)
                change_gene.insert(k, j)
                Gene.append(change_gene)
    
    for i in range(Gene.__len__()):
        leng = copy.deepcopy(length(Gene[i]))

        a = True

        for j in range(GOOD.__len__()):
            if Gene[i] == GOOD[j][1]:
                a = False
        if a:
            if leng < GOOD[GOOD.__len__()-1][0]:
                GOOD.append([leng, Gene[i]])
                GOOD.sort()
                if GOOD.__len__() == GOOD_NUM+1:
                    GOOD.pop()

    for i in range(GOOD.__len__()):
        print(GOOD[i][0], GOOD[i][1])
    if GOOD.__len__()!=0 :
        Best_GOOD.append([GOOD[0][0], GOOD[0][1]])
        Best_GOOD.sort()
        if Best_GOOD.__len__()==2:
            Best_GOOD.pop()
    ###################################################
    print(Best_GOOD)
    print("——", G, "———")
    G += 1
    # time.sleep(1)

# 더 발전 사항
# 계속 같은 GOOD 값이 나올 경우 처음 교배를 다시하는 것도 좋을 듯. Clear
# 계속 적으로 돌리면 최저 값이 나올 것 같다. Clear
# 끼워넣기 기술 해보자 Clear